library(readr)
mpst_full_data <- read_csv("MCD/DeepLearning/Tareas/Tarea_8/mpst_full_data.csv")
View(mpst_full_data)
mpst_full_data["14794",3]
mpst_full_data["14794",2]
mpst_full_data["14794",1]
mpst_full_data["14794","title"]
mpst_full_data["14794","plot_sinopsis"]
View(mpst_full_data)
mpst_full_data[3,]
mpst_full_data[4,]
mpst_full_data[2,]
devtools::install_github("lebebr01/SPSStoR")
install.packages("devtools")
devtools::install_github("lebebr01/SPSStoR")
library(SPSStoR)
install.packages("stringr")
install.packages("stringr")
library(SPSStoR)
library("stringr")
library(SPSStoR)
setwd("~/MCD/Estadistica_Multivariada/Example_Ch_7")
spss_to_r(system.file("SPSSsyntax", "chapter7.txt", package = "SPSStoR"))
spss_to_r(system.file("SPSSsyntax", "chapter7.txt", package = "SPSStoR"))รง
spss_to_r(system.file("SPSSsyntax", "chapter7.txt", package = "SPSStoR"))
spss_to_r(system.file("SPSSsyntax", "chapter.7.sps", package = "SPSStoR"))
knitr::opts_chunk$set(echo = TRUE)
library(haven)
chapter_7 <- read_sav("chapter.7.sav")
knitr::opts_chunk$set(echo = TRUE)
library(haven)
data <- read_sav("chapter.7.sav")
rm(chapter_7)
View(data)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# Paquetes para el analisis
library(haven)
library(tidyverse)
data <- read_sav("chapter.7.sav")
View(data)
View(data)
data %>% drop_na(y1m) %>% drop_na(y2m) %>% drop_na(y3m) %>% drop_na(y4m)
data %>% filter(y1m,y2m,y3m,y4m) %>% drop_na(y1m) %>% drop_na(y2m) %>% drop_na(y3m) %>% drop_na(y4m)
data %>% select(y1m,y2m,y3m,y4m) %>% drop_na(y1m) %>% drop_na(y2m) %>% drop_na(y3m) %>% drop_na(y4m)
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na(y1m) %>% drop_na(y2m) %>%
drop_na(y3m) %>% drop_na(y4m)
View(y1)
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na(y1m) %>% drop_na(y2m) %>% drop_na(y3m) %>% drop_na(y4m)
data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na(y1m) %>% drop_na(y2m) %>% drop_na(y3m) %>% drop_na(y4m)
y0<-data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
rm(y0)
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
View(y2)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
#
n1<-nrow(y1)
n2<-nrow(y2)
matrix(0, 10, 10)
matrix(1, 10, 10)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
# Matrices auxiliares
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
View(onem1)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
# Matrices auxiliares
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
View(i2)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%%(i1-onem1/n1)%%y1/(n1-1)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
str(y1)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na() %>% as.matrix()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na() %>% as.matrix()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
s2 <- t(y2)%*%(i2-onem2/n2)%*%y2/(n2-1)
View(s1)
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na() %>% as.matrix()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na() %>% as.matrix()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
s2 <- t(y2)%*%(i2-onem2/n2)%*%y2/(n2-1)
spl <- ((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
lnm <- ((n1-1)*ln(det(s1))+(n2-1)*ln(det(s2)))/2-(n1+n2-2)*ln(det(spl))/2.
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na() %>% as.matrix()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na() %>% as.matrix()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
s2 <- t(y2)%*%(i2-onem2/n2)%*%y2/(n2-1)
spl <- ((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
lnm <- ((n1-1)*log(det(s1))+(n2-1)*log(det(s2)))/2-(n1+n2-2)*log(det(spl))/2.
knitr::opts_chunk$set(echo = TRUE)
# Paquetes para el analisis
library(haven)
library(tidyverse)
data <- read_sav("chapter.7.sav")
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na() %>% as.matrix()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na() %>% as.matrix()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
s2 <- t(y2)%*%(i2-onem2/n2)%*%y2/(n2-1)
spl <- ((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
lnm <- ((n1-1)*log(det(s1))+(n2-1)*log(det(s2)))/2-(n1+n2-2)*log(det(spl))/2.
# selecionamos columnas omitiendo NA
y1 <- data %>% select(y1m,y2m,y3m,y4m) %>% drop_na() %>% as.matrix()
y2 <- data %>% select(y1f,y2f,y3f,y4f) %>% drop_na() %>% as.matrix()
# Numero de renglones de los vectores anteriores
n1<-nrow(y1)
n2<-nrow(y2)
## Matrices llenas de unos
onem1 <- matrix(1, n1, n1)
onem2 <- matrix(1, n2, n2)
## Matrices diagonales
i1 <- diag(n1)
i2 <- diag(n2)
s1 <- t(y1)%*%(i1-onem1/n1)%*%y1/(n1-1)
s2 <- t(y2)%*%(i2-onem2/n2)%*%y2/(n2-1)
spl <- ((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
lnm <- ((n1-1)*log(det(s1))+(n2-1)*log(det(s2)))/2-(n1+n2-2)*log(det(spl))/2.
boxm <- -2*lnm
s1
s2
spl
lnm
boxm
print("s1")
s1
s2
spl
lnm
boxm
print("s1")
s1
print("s2 \n")
s2
spl
lnm
boxm
print("s1")
s1
print("s2")
s2
print("spl")
spl
print("lnm")
lnm
print("boxm")
boxm
var(y)
var(y1)
View(y1)
View(s1)
var(y2)
View(s2)
setwd("~/MCD/Estadistica_Multivariada/Examples_of_Ch5")
knitr::opts_chunk$set(echo = TRUE)
# Paquetes para el analisis
library(haven)
library(tidyverse)
data <- read_sav("chapter.5.sav")
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
View(y)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
n <- nrow(y)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000))
mu0 <- rbind(c(70,170))
n <- nrow(y)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(n, 1, 1)
View(onev)
t(y)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n, 1)
View(onev)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n, 1)
ybar=t(y)%*%onev/n.
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n, 1)
ybar=t(y)%*%onev/n.
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n, 1)
ybar=t(y)%*%onev/n
View(ybar)
mean(y)
mean(y[,1])
mean(y[,2])
apply(y, mean)
apply(y, mean())
ybar
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, 1,n )
ybar=t(y)%*%onev/n
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(n, 1,1 )
ybar=t(y)%*%onev/n
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n,1 )
ybar=t(y)%*%onev/n
View(ybar)
View(mu0)
# selecionamos columnas omitiendo NA
y <- data %>% select(weight,height) %>% drop_na() %>% as.matrix()
sigma <- rbind(c(20,100),c(100,1000)) # matriz de covarianza
mu0 <- rbind(c(70,170)) # vector de medias
n <- nrow(y)
## Matrices llenas de unos
onev <- matrix(1, n,1 )
ybar=t(t(y)%*%onev/n) # vector de medias
#
z2 <- n*t(ybar-mu0)%*%inv(sigma)%*%(ybar-mu0)
install.packages("matlib")
install.packages("matlib")
library("matlib")
library("matlib")
